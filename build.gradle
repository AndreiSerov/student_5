plugins {
	id 'application'
	id 'checkstyle'
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.liquibase.gradle' version '2.0.4'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

application {
	mainClass = 'hexlet.code.AppApplication'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.22'

	annotationProcessor(
			'org.projectlombok:lombok:1.18.22',
	)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation(
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security',

			/* Data */
			'org.liquibase:liquibase-core:4.8.0',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'com.querydsl:querydsl-core:5.0.0',
			'com.querydsl:querydsl-jpa:5.0.0',
			'com.rollbar:rollbar-spring-boot-webmvc:1.8.1'
	)

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core:4.8.0',
			'org.liquibase.ext:liquibase-hibernate5:4.5.0',
			'org.springframework.boot:spring-boot-starter-data-jpa'
	)

	runtimeOnly (
			'com.h2database:h2:1.4.200',
			'org.postgresql:postgresql:42.2.27'
	)

	testImplementation(
			'org.springframework.boot:spring-boot-starter-security',
			'org.springframework.security:spring-security-test:5.5.1',
			'org.springframework.boot:spring-boot-starter-test',
	)
}


// чтобы миграции учитывали изменения в моделях
diffChangeLog {
	dependsOn compileJava
}

// Настраиваем Liquibase
liquibase {
	activities {
		main {
			// Указываем путь, по которому будет сгенерирован файл миграции
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			// Указываем источник, с которым будут сравниваться изменения
			// Это база данных, изначально она пустая
			url 'jdbc:h2:./taskManager'
			// Имя пользователя и пароль для подключения к базе
			username ''
			password ''
			// Сравниваем с моделями, задавая пакет
			referenceUrl 'hibernate:spring:hexlet.code.model' +
					// Указываем диалект
					'?dialect=org.hibernate.dialect.H2Dialect' +
					// Указываем правила именования таблиц и столбцов,
					// чтобы они соответствовали правилам Spring
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}

wrapper {
	gradleVersion = '7.4.2'
	distributionType = Wrapper.DistributionType.ALL
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}

	dependsOn test
}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean